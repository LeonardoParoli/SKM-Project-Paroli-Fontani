<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cocoa_mc</groupId>
	<artifactId>unit</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Unit</name>
	<description>Unit microservice for COCOA-MC</description>
	<packaging>war</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<junit.version>4.13.1</junit.version>
		<assertJ.version>3.15.0</assertJ.version>
		<mockito.version>3.2.4</mockito.version>
		<docker.version>4.0.0</docker.version>
		<antrun.version>3.1.0</antrun.version>
		<resteasy.version>4.6.0.Final</resteasy.version>

		<maven-dependency-plugin.version>3.1.1
		</maven-dependency-plugin.version>
		<maven.compiler.version>3.10.1</maven.compiler.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		
		<mysql_password>${env.MYSQL_PASSWORD}</mysql_password>
		<bellini_project_pass>${env.BELLINI_PROJECT_PASSWORD}</bellini_project_pass>
		<wildfly_password>${env.WILDFLY_PASSWORD}</wildfly_password>
	</properties>

	<dependencies>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>8.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.4.13.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.29</version>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertJ.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.6</version>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>5.1.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>json-schema-validator</artifactId>
			<version>3.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.4.5</version>
		</dependency>
		<dependency>
			<groupId>com.dkanejs.maven.plugins</groupId>
			<artifactId>docker-compose-maven-plugin</artifactId>
			<version>${docker.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-antrun-plugin</artifactId>
			<version>${antrun.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.12.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.13</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20210307</version>
		</dependency>
		<dependency>
			<groupId>org.wildfly</groupId>
			<artifactId>wildfly-controller-client</artifactId>
			<version>8.2.1.Final</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>0.11.2</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>0.11.2</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>0.11.2</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>unit</finalName>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.11</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>2.12</version>
					</dependency>
				</dependencies>
				<configuration>
					<includes>
						<include>**/*.class</include>
					</includes>
					<excludedGroups>integrationTest.businessLogic.IntegrationTest
					</excludedGroups>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.version}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.3.2</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven-dependency-plugin.version}</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>properties</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.dkanejs.maven.plugins</groupId>
				<artifactId>docker-compose-maven-plugin</artifactId>
				<version>${docker.version}</version>
				<executions>
					<execution>
						<id>pull</id>
						<phase>test</phase>
						<goals>
							<goal>pull</goal>
						</goals>
						<configuration>
							<composeFile>${project.basedir}/docker/docker-compose.yml
							</composeFile>
							<ignorePullFailures>true</ignorePullFailures>
						</configuration>
					</execution>
					<execution>
						<id>up</id>
						<phase>test</phase>
						<goals>
							<goal>up</goal>
						</goals>
						<configuration>
							<composeFile>${project.basedir}/docker/docker-compose.yml
							</composeFile>
							<detachedMode>true</detachedMode>
						</configuration>
					</execution>
					<execution>
						<id>down</id>
						<phase>verify</phase>
						<goals>
							<goal>down</goal>
						</goals>
						<configuration>
							<composeFile>${project.basedir}/docker/docker-compose.yml
							</composeFile>
							<removeVolumes>true</removeVolumes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target/server/standalone/configuration/certs
							</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/certificates</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-user</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>configuration/addUser.bat</executable>
							<arguments>
								<argument>${basedir}</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M3</version>
				<executions>
					<execution>
						<id>enforce-properties</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<buildEnvironment/>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>4.0.0.Beta3</version>
				<executions>
					<execution>
						<id>add-mutual-SSL-configs</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>execute-commands</goal>
						</goals>
						<configuration>
							<commands>
								<command>/subsystem=elytron/credential-store=store:add(path=certs/store.jceks,relative-to=jboss.server.config.dir,credential-reference={clear-text=${bellini_project_pass}},create=true)</command>
								<command>/subsystem=elytron/credential-store=store/:add-alias(alias=STOREPASS,secret-value=${bellini_project_pass})</command>
								<command>/subsystem=elytron/key-store=twoWayKS:add(path=certs/unit.p12,relative-to=jboss.server.config.dir,credential-reference={store=store,alias=STOREPASS},type=PKCS12)</command>
								<command>/subsystem=elytron/key-store=twoWayTS:add(path=certs/unittruststore.p12,relative-to=jboss.server.config.dir,credential-reference={store=store,alias=STOREPASS},type=PKCS12)</command>
								<command>/subsystem=elytron/key-manager=twoWayKM:add(key-store=twoWayKS,credential-reference={store=store,alias=STOREPASS})</command>
								<command>/subsystem=elytron/trust-manager=twoWayTM:add(key-store=twoWayTS)</command>
								<command>/subsystem=elytron/server-ssl-context=twoWaySSC:add(key-manager=twoWayKM,protocols=["TLSv1.2"],trust-manager=twoWayTM,need-client-auth=true)</command>
								<command>/subsystem=undertow/server=default-server/https-listener=https:read-attribute(name=security-realm)</command>
								<command>/subsystem=undertow/server=default-server/https-listener=https:undefine-attribute(name=security-realm)</command>
								<command>/subsystem=undertow/server=default-server/https-listener=https:write-attribute(name=ssl-context,value=twoWaySSC)</command>
								<command>:reload</command>
							</commands>
							<failOnError>true</failOnError>
						</configuration>
					</execution>
					<execution>
						<id>add-datasource</id>
						<phase>package</phase>
						<goals>
							<goal>start</goal>
							<goal>deploy-artifact</goal>
							<goal>add-resource</goal>
						</goals>
						<configuration>
							<address>subsystem=datasources,data-source=java:jboss/datasources/unitDS
							</address>
							<resources>
								<resource>
									<properties>
										<jndi-name>java:jboss/datasources/unitDS</jndi-name>
										<enabled>true</enabled>
										<connection-url>jdbc:mysql://localhost:50002/unitDS
										</connection-url>
										<driver-class>com.mysql.cj.jdbc.Driver</driver-class>
										<driver-name>mysql</driver-name>
										<user-name>javaclient</user-name>
										<password>${mysql_password}</password>
									</properties>
								</resource>
							</resources>
							<groupId>mysql</groupId>
							<artifactId>mysql-connector-java</artifactId>
							<name>mysql</name>
						</configuration>
					</execution>

					<execution>
						<id>start-wf</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>deploy-only</goal>
						</goals>
						<configuration>
							<filename>unit.war</filename>
						</configuration>
					</execution>

					<execution>
						<id>stop-wf</id>
						<goals>
							<goal>shutdown</goal>
						</goals>
						<phase>post-integration-test</phase>
					</execution>
				</executions>

				<configuration>
					<add-user>
						<users>
							<user>
								<username>igor</username>
								<password>${wildfly_password}</password>
							</user>
						</users>
					</add-user>
					<version>25.0.0.Final</version>
					<hostname>127.0.0.1</hostname>
					<port>9990</port>
					<username>igor</username>
					<password>${wildfly_password}</password>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${antrun.version}</version>
				<executions>
					<execution>
						<id>Delete</id>
						<phase>verify</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo>Remove workdir</echo>
								<delete dir="${basedir}/docker/workdir" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.19.1</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>2.12</version>
					</dependency>
				</dependencies>
				<configuration>
					<groups>integrationTest.businessLogic.IntegrationTest</groups>
					<testClassesDirectory>${project.build.testOutputDirectory}
					</testClassesDirectory>
					<includes>
						<include>**/*.class</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>